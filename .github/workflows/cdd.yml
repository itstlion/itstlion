name: Continuous Delivery & Deployment
on:
  workflow_run:
    workflows: [Continuous Integration]
    types: [completed]
env:
  HEROKU: heroku.com
  HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
  HEROKU_APP: itstlion
  HEROKU_PROCESS: web
jobs:
  # ---------- Stage 1 ----------
  get-version:
    name: Get version from configuration
    runs-on: ubuntu-latest
    if: ${{github.event.workflow_run.conclusion == 'success'}}
    outputs:
      version: ${{steps.get-version.outputs.version}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get version from configuration
        id: get-version
        run: |
          VERSION=`sed -nE 's/^\s*"version": "(.*?)",$/\1/p' package.json`
          echo ::set-output name=version::$VERSION
  # ---------- Stage 2 ----------
  deliver:
    name: Deliver image to registries
    runs-on: ubuntu-latest
    needs: get-version
    env:
      GITHUB_IMAGE: itstlion/itstlion
      GITHUB_REGISTRY: ghcr.io
      HEROKU_REGISTRY: registry.${{env.HEROKU}}
      VERSION: ${{needs.get-version.outputs.version}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install required dependencies
        run: npm install
      - name: Package application
        run: npm run build:prod
      - name: Build image
        run: docker build -t $GITHUB_REGISTRY/$GITHUB_IMAGE .
      - name: Prepare image for GitHub
        run: docker tag $GITHUB_REGISTRY/$GITHUB_IMAGE \
          $GITHUB_REGISTRY/$GITHUB_IMAGE:$VERSION
      - name: Prepare image for Heroku
        run: docker tag $GITHUB_REGISTRY/$GITHUB_IMAGE \
          $HEROKU_REGISTRY/$HEROKU_APP/$HEROKU_PROCESS
      - name: Login to GitHub registry
        env:
          TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: echo $TOKEN | docker login $GITHUB_REGISTRY -u _ --password-stdin
      - name: Push images to GitHub registry
        run: docker push -a $GITHUB_REGISTRY/$GITHUB_IMAGE
      - name: Logout from GitHub registry
        run: docker logout $GITHUB_REGISTRY
      - name: Login to Heroku Registry
        run: echo $HEROKU_API_KEY |
          docker login $HEROKU_REGISTRY -u _ --password-stdin
      - name: Push image to Heroku registry
        run: docker push $HEROKU_REGISTRY/$HEROKU_APP/$HEROKU_PROCESS
      - name: Logout from Heroku registry
        run: docker logout $HEROKU_REGISTRY
  # ---------- Stage 3 ----------
  deploy:
    name: Deploy image in production
    runs-on: ubuntu-latest
    needs: deliver
    steps:
      - name: Install Heroku CLI
        run: curl https://cli-assets.$HEROKU/install-ubuntu.sh | sudo sh
      - name: Login to Heroku
        env:
          FILE: .netrc
          LOGIN: ${{ secrets.HEROKU_LOGIN }}
        run: echo "machine api.$HEROKU" > $FILE &&
          echo "  login $LOGIN" >> $FILE &&
          echo "  password $HEROKU_API_KEY" >> $FILE
      - name: Deploy image
        run: heroku container:release $HEROKU_PROCESS -a $HEROKU_APP
